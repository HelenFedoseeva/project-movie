{"mappings":"gfAAAA,EAAA,SCAA,MAAMC,EAAS,CACb,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,YAIK,SAAAC,EAAmBC,EAAUC,GAC1C,IAAIC,EAAQ,GAYZ,OAXAF,EAASG,KAAIC,IACX,IAAK,MAAMC,KAAKT,EACVQ,IAAYC,EAAER,IAChBK,EAAMI,KAAKD,EAAEP,KAAK,IAKpBI,EAAMK,OAAS,GACjBL,EAAMM,OAAO,EAAG,EAAG,SAEdN,EAAMO,KAAK,K,CCpFpB,SAASC,EAAYC,GACnB,MAAMC,QAAEA,GAAYD,EACpB,OAAOC,EACJT,KAAI,EAACU,YAAEA,EAAWC,MAAEA,EAAKC,aAAEA,EAAYlB,GAAEA,EAAEmB,UAAEA,KAErC,2EACiBH,WAAqBC,qCAAyCjB,uEAE7DiB,0DAJXf,EAAUiB,QAK+BD,EAAaE,MAClE,EACA,qCAKHR,KAAK,G,CAGH,SAASS,EAAYC,EAAMC,GAEhCA,EAAcC,UAAYX,EAAYS,E,CC3BxC,MAAMG,EAAaC,SAASH,cAAc,gBACpCI,EAAaD,SAASH,cAAc,YAE1CK,QAAQC,IAAIJ,GAEZA,EAAWK,iBAAiB,SAE5BC,iBAEEC,YAAc,EACd,IACE,MAAMC,EAAUC,aAAaC,QAAQ,WAC/BC,EAAeC,KAAKC,MAAML,GAChCL,QAAQC,IAAIO,EAAarB,SACzBM,EAAYe,EAAarB,QAASY,E,CAClC,MAAOY,GACPX,QAAQC,IAAIU,E,KChBhB,MAAMC,EAAYd,SAASH,cAAc,eACnCkB,EAAaf,SAASH,cAAc,YAE1CK,QAAQC,IAAIW,GAEZA,EAAUV,iBAAiB,SAE3BC,iBAGIC,YAAc,EACd,IACI,MAAMU,EAASR,aAAaC,QAAQ,UAC9BQ,EAAcN,KAAKC,MAAMI,GAC/Bd,QAAQC,IAAIc,EAAY5B,SACxBM,EAAYsB,EAAY5B,QAAS0B,E,CAErC,MAAOF,GACHX,QAAQC,IAAIU,E","sources":["src/my-lybrary.js","src/js/get-genres.js","src/js/render-cards.js","src/js/add-to-watched.js","src/js/add-to-queque.js"],"sourcesContent":["import './js/modal-footer';\nimport './js/add-to-watched';\nimport './js/add-to-queque';\n","const genres = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport default function getGenres(genreArr, genreList) {\n  let genre = [];\n  genreArr.map(genreId => {\n    for (const g of genres) {\n      if (genreId === g.id) {\n        genre.push(g.name);\n      }\n    }\n  });\n\n  if (genre.length > 2) {\n    genre.splice(2, 5, 'Other');\n  }\n  return genre.join(', ');\n}\n","import getGenres from './get-genres';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// fechMuviTrend().then(resp => {\n//   renderCards(resp, cardListEl);\n// });\n\nfunction createCards(movies) {\n  const { results } = movies;\n  return results\n    .map(({ poster_path, title, release_date, id, genre_ids }) => {\n      const genre = getGenres(genre_ids);\n      return `<li class=\"movie-card\">\n      <img src=\"${IMAGE_URL}${poster_path}\" alt=\"${title} class=\"movie-card-img\" data-id='${id}'\"/>\n      <div class=\"movie-info\">\n      <p class=\"movie-title\">${title}</p>\n      <p class=\"film-cards__title movie-genres\">${genre} | ${release_date.slice(\n        0,\n        4\n      )}</p> \n      </div>\n    </li>`;\n    })\n    .join('');\n}\n\nexport function renderCards(data, querySelector) {\n  /* querySelector.insertAdjacentHTML('beforeend', createCards(data)); */\n  querySelector.innerHTML = createCards(data);\n}\n","import { renderCards } from './render-cards';\n\nconst watchedBtn = document.querySelector('.watched-btn');\nconst galleryRef = document.querySelector('.gallery');\n\nconsole.log(watchedBtn);\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\n\nasync function onWatchedBtnClick() {\n  //clearContent();\n  currentPage = 1;\n  try {\n    const watched = localStorage.getItem('watched');\n    const parseWatched = JSON.parse(watched);\n    console.log(parseWatched.results);\n    renderCards(parseWatched.results, galleryRef);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { renderCards } from './render-cards';\n\nconst quequeBtn = document.querySelector('.queque-btn');\nconst galleryRef = document.querySelector('.gallery');\n\nconsole.log(quequeBtn)\n\nquequeBtn.addEventListener('click', onQuequeBtnClick);\n\nasync function onQuequeBtnClick() {\n\n    //clearContent();\n    currentPage = 1;\n    try {\n        const queque = localStorage.getItem('queque');\n        const parseQueque = JSON.parse(queque);\n        console.log(parseQueque.results)\n        renderCards(parseQueque.results, galleryRef);\n    }\n    catch (error) {\n        console.log(error);\n    }\n}"],"names":["parcelRequire","$fab5075d8cb83450$var$genres","id","name","$fab5075d8cb83450$export$2e2bcd8739ae039","genreArr","genreList","genre","map","genreId","g","push","length","splice","join","$48b9195af7100b32$var$createCards","movies","results","poster_path","title","release_date","genre_ids","slice","$48b9195af7100b32$export$e483d52d8d6686e1","data","querySelector","innerHTML","$a0a4ec25fbda4c4f$var$watchedBtn","document","$a0a4ec25fbda4c4f$var$galleryRef","console","log","addEventListener","async","currentPage","watched","localStorage","getItem","parseWatched","JSON","parse","error","$e2736b9487d6d91b$var$quequeBtn","$e2736b9487d6d91b$var$galleryRef","queque","parseQueque"],"version":3,"file":"my-library.36a4f7b7.js.map"}